openapi: 3.0.1
info:
  title: 图像识别数据集制作系统
  description:
  version: 0.0.1
  termsOfService:
  contact:
    name:
    url:
    email:
  license:
    name:
    url:
servers:
  - url: http://{host}:{port}/api
    description: Development Server
    variables:
      host:
        default: 127.0.0.1
      port:
        default: 5000
  - url: http://{host}:{port}/api
    description: Testing Server
    variables:
      host:
        default: 127.0.0.1
      port:
        default: 5000
  - url: http://{host}:{port}/api
    description: Staging Server
  - url: http://{host}:{port}/api
    description: Production Server
paths:
  /users:
    get:
      description:
      responses:
        '200':
          description: 用户列表
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/user'
        default:
          description:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorModel'
    post:
      description: 创建用户
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
      responses:
        '201':
          description: 创建成功
          content:
            application/json:
              schema:
                $ref: '#/components/schema/user'
  /users/{user-id}:
    get:
      summary: Return a user by ID.
      parameters:
        - name: user-id
          in: path
          required: true
          description:
          schema:
            type: integer
            format: int32
            minial: 1
      responses:
        '200':
          description:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/users'

    put:
    delete:

  /api/teams:

  /api/datasets:
    get:
      description:
      responses:
        '200':
          description:
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/dataset'
        default:
          description:
          content:
    post:
      description:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              item:
                $ref: '#/components/schemas/dataset'
      responses:
        '201':
          description:
          content:
            application/json:
              schema:
                type: object
                items:
                  $ref: '#/component/schemas/dataset'
        default:
          description:
          content:
components:
  schemas:
    user:
      type: object
      properties:
        id:
          type: integer
          format: int32
        username:
          type: string
        password:
          type: string
        name:
          type: string
        email:
          type: string
        phone:
          type: string
    role:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
        createtime:
          type: string
          format: date-time
        creator_id:
          type: integer
          format: int32
        creator:
          type: string
    permission:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
    dataset:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
        status:
          type: integer
          format: int32
        createtime:
          type: string
          format: date-time
        creator_id:
          type: integer
          format: int32
    image:
      type: object
      properties:
        id:
          type: integer
          format: int32
        md5:
          type: string
        filename:
          type: string
        extname:
          type: string
        status:
          type: integer
          format: int32
        createtime:
          type: string
          format: date-time
        creator_id:
          type: integer
          format: int32
        creator:
          type: string
    notation:
      type: object
      properties:
        id:
          type: integer
          format: int32
        description:
          type: integer
          format: int32
        notations:
          type: string
        status:
          type: integer
          format: enum

  responses:
  parameters:
  examples:
  requestBodies:
  headers:
  securitySchemes:
    api_key:
      type: apiKey
      name: api_key
      in: header
    auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl:
          scopes:
    basicauth:
      type: http
      scheme: basic
  links:
  callbacks:
security:
  - BasicAuth: []
tags: